services:
  kafka4:
    image: "apache/kafka:4.0.0"
    network_mode: "host"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_LISTENERS:            SASL_SSL://localhost:4093,PLAINTEXT_HOST://localhost:4092,PLAINTEXT://localhost:24092,SSL://localhost:24093,SASL_PLAINTEXT://localhost:14093
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://localhost:4093,PLAINTEXT_HOST://localhost:4092,PLAINTEXT://localhost:24092,SSL://localhost:24093,SASL_PLAINTEXT://localhost:14093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_HOST
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,SSL:SSL,SASL_SSL:SASL_SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,PLAINTEXT2:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:24092
      KAFKA_CLIENT_LISTENER_NAME: PLAINTEXT_HOST
      KAFKA_CONTROLLER_LISTENER_NAMES: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELEGATION_TOKEN_SECRET_KEY: 'foo'

      # SASL
      KAFKA_SASL_ENABLED_MECHANISMS: SASL_PLAIN,PLAIN,SCRAM-SHA-256,SCRAM-SHA-512
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_SASL_MECHANISMS: PLAIN,SCRAM-SHA-256,SCRAM-SHA-512

      # SSL
      KAFKA_TLS_TYPE: JKS
      KAFKA_CERTIFICATE_PASSWORD: confluent
      KAFKA_SSL_CLIENT_AUTH: "required"
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SSL_KEYSTORE_FILENAME: keystore/kafka.keystore.jks
      KAFKA_SSL_TRUSTSTORE_FILENAME: truststore/kafka.truststore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: ssl_key_credentials
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: ssl_key_credentials
      KAFKA_SSL_KEY_CREDENTIALS: ssl_key_credentials
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"

    volumes:
      - ../kafka/truststore/kafka.truststore.jks:/etc/kafka/secrets/truststore/kafka.truststore.jks:ro
      - ../kafka/keystore/kafka.keystore.jks:/etc/kafka/secrets/keystore/kafka.keystore.jks:ro
      - ../kafka/credentials/ssl_key_credentials:/etc/kafka/secrets/ssl_key_credentials:ro
      - ./kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf:ro

  create-delegation-token4:
    image: "apache/kafka:4.0.0"
    network_mode: "host"
    user: root
    depends_on:
      - kafka4
    command: >
     /bin/bash -c "
        until /opt/kafka/bin/kafka-delegation-tokens.sh --bootstrap-server localhost:24093 --create --max-life-time-period -1 --command-config /etc/kafka/client.config --renewer-principal User:admin | awk 'NR>5 {print $1, '\t', $2}' > /etc/kafka/tokens/delegation-tokens.env; do
          sleep 1;
        done;
        echo 'done creating delegation token';"
    volumes:
      - ../kafka/truststore/kafka.truststore.jks:/etc/kafka/secrets/truststore/kafka.truststore.jks:ro
      - ../kafka/keystore/kafka.keystore.jks:/etc/kafka/secrets/keystore/kafka.keystore.jks:ro
      - ./client.config:/etc/kafka/client.config
      - ./tokens/:/etc/kafka/tokens:Z
      - ./kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf:ro

  add-kafka-users4:
    image: apache/kafka:4.0.0
    network_mode: "host"
    user: root
    depends_on:
      - kafka4
    command: >
     /bin/bash -c "
        export KAFKA_HEAP_OPTS='-Xmx1G -Xms1G';
        until /opt/kafka/bin/kafka-configs.sh --bootstrap-server localhost:4092 --alter --add-config 'SCRAM-SHA-256 =[iterations=4096,password=client-password]' --entity-type users --entity-name client; do
          sleep 1;
        done;
        until /opt/kafka/bin/kafka-configs.sh --bootstrap-server localhost:4092 --alter --add-config 'SCRAM-SHA-512 =[iterations=4096,password=client-password]' --entity-type users --entity-name client-sha512; do
          sleep 1;
        done;
        echo 'done adding kafka users';"