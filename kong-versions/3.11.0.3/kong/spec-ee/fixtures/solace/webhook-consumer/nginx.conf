worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /usr/local/openresty/nginx/conf/mime.types;
    default_type  application/octet-stream;
    log_format webhook_simple '$time_iso8601 $request_method $request_uri $status';

    server {
        listen 9080;
        server_name localhost;

        client_max_body_size 10m;

        location = /webhook/consumer {
            access_log /var/log/webhook/access.log webhook_simple;
            error_log /var/log/webhook/error.log;
            lua_need_request_body on;

            content_by_lua_block {
                local body = ngx.req.get_body_data() or "(empty)"
                local headers = ngx.req.get_headers()

                local msg_id = headers["solace-correlation-id"]
                local delivery_mode = headers["solace-delivery-mode"]
                local time_str = os.date("%Y-%m-%d %H:%M:%S")

                -- Collect all headers
                local headers_str = ""
                for k, v in pairs(headers) do
                    if type(v) == "table" then
                        v = table.concat(v, ", ")
                    end
                    headers_str = headers_str .. k .. "=" .. tostring(v) .. "; "
                end

                local log_entry = string.format(
                    "[%s] ID=%s, Mode=%s, Headers=[%s], Body=%s\n",
                    time_str, msg_id, delivery_mode, headers_str, body
                )

                local success = false
                local file, err = io.open("/var/log/webhook/solace_messages.log", "a")
                if file then
                    file:write(log_entry)
                    file:close()
                    success = true
                else
                    ngx.log(ngx.ERR, "Failed to open log file: ", err)
                end
                ngx.status = success and 200 or 500
                ngx.header["Content-Type"] = "text/plain"
                ngx.say(success and "✅ Message logged successfully" or "❌ Failed to log message")
                return ngx.exit(ngx.status)
            }
        }
        location /health {
            content_by_lua_block {
                ngx.status = 200
                ngx.header["Content-Type"] = "application/json"
                ngx.say('{"status":"healthy","service":"webhook-consumer"}')
            }
        }
    }
}