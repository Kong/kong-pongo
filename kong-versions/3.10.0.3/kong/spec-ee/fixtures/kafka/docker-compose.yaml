version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.1
    hostname: zookeeper
    network_mode: "host"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/zookeper_jaas.conf"
    volumes:
      - ./zookeper_jaas.conf:/etc/kafka/zookeper_jaas.conf

  add-kafka-users:
    image: confluentinc/cp-kafka:latest
    network_mode: "host"
    command: >
     /bin/bash -c "
        while ! nc -z localhost 9092;
        do
          echo sleeping;
          sleep 1;
        done;
        kafka-configs --bootstrap-server localhost:9092 --alter --add-config 'SCRAM-SHA-256 =[iterations=4096,password=client-password]' --entity-type users --entity-name client;
        kafka-configs --bootstrap-server localhost:9092 --alter --add-config 'SCRAM-SHA-512 =[iterations=4096,password=client-password]' --entity-type users --entity-name client-sha512;"
    healthcheck:
      test: nc -z localhost 9092

  create-delegation-token:
    image: confluentinc/cp-kafka:latest
    network_mode: "host"
    user: root
    command: >
     /bin/bash -c "
        while ! nc -z localhost 9092;
        do
          echo sleeping;
          sleep 1;
        done;
        kafka-delegation-tokens --bootstrap-server localhost:29093 --create --max-life-time-period -1 --command-config /etc/kafka/client.config --renewer-principal User:admin | awk 'NR>5 {print $1, '\t', $2}' > /etc/kafka/tokens/delegation-tokens.env"
    healthcheck:
      test: nc -z localhost 9092
    volumes:
      - ./truststore:/etc/kafka/secrets/truststore
      - ./keystore:/etc/kafka/secrets/keystore
      - ./credentials:/etc/kafka/secrets/
      - ./client.config:/etc/kafka/client.config
      - ./tokens/:/etc/kafka/tokens:Z
      - ./broker-config/kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf

  kafka:
    image: confluentinc/cp-kafka:7.9.1
    hostname: kafka
    network_mode: "host"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: localhost:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,SSL:SSL,SASL_SSL:SASL_SSL,SASL_PLAINTEXT:SASL_PLAINTEXT
      KAFKA_LISTENERS:  SASL_SSL://localhost:9093,PLAINTEXT_HOST://localhost:9092,PLAINTEXT://localhost:29092,SSL://localhost:29093,SASL_PLAINTEXT://localhost:19093
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://localhost:9093,PLAINTEXT_HOST://localhost:9092,PLAINTEXT://localhost:29092,SSL://localhost:29093,SASL_PLAINTEXT://localhost:19093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

      # ssl
      KAFKA_SSL_KEYSTORE_FILENAME: keystore/kafka.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: ssl_key_credentials
      KAFKA_SSL_KEYSTORE_PASSWORD: confluent
      KAFKA_SSL_KEYSTORE_TYPE: PKCS12
      KAFKA_SSL_TRUSTSTORE_FILENAME: truststore/kafka.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: ssl_key_credentials
      KAFKA_SSL_TRUSTSTORE_TYPE: PKCS12
      KAFKA_SSL_KEY_PASSWORD: confluent
      KAFKA_SSL_KEY_CREDENTIALS: ssl_key_credentials

      # Enable SASL SSL configuration
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: SASL_PLAIN,PLAIN,SCRAM-SHA-256,SCRAM-SHA-512
      KAFKA_SASL_MECHANISMS: PLAIN,SCRAM-SHA-256,SCRAM-SHA-512

      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: PLAINTEXT

      # KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
      # Ignores name resolution
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ''

      # 'required' for mTLS
      KAFKA_SSL_CLIENT_AUTH: 'requested'

      KAFKA_DELEGATION_TOKEN_MASTER_KEY: 'foo'

      # 'requested' for TLS
      # KAFKA_SSL_CLIENT_AUTH: requested

      # Enables tcp lib level debugging
      KAFKA_OPTS: "-Djavax.net.debug=all -Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"

      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - ./truststore:/etc/kafka/secrets/truststore
      - ./keystore:/etc/kafka/secrets/keystore
      - ./credentials:/etc/kafka/secrets/
      - ./client.config:/etc/kafka/client.config
      - ./broker-config/kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    network_mode: "host"
    depends_on:
      - kafka
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: localhost:9092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: localhost:2181

  kong:
    image: kong/kong:3.8
    environment:
      KONG_DATABASE: "off"
      KONG_ADMIN_LISTEN: "off"
      KONG_PROXY_LISTEN: "off"
      KONG_STATUS_LISTEN: "off"
      KONG_DECLARATIVE_CONFIG: /kong/tcp-proxy.yaml
      KONG_STREAM_LISTEN: "0.0.0.0:9993 ssl reuseport backlog=65536"
      KONG_ROUTER_FLAVOR: traditional
    network_mode: "host"
    volumes:
      - ./kong/tcp-proxy.yaml:/kong/tcp-proxy.yaml
